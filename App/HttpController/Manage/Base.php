<?php

namespace App\HttpController\Manage;

use EasySwoole\Http\AbstractInterface\Controller;

use App\HttpController\Common\Common;
use App\HttpController\Common\ErrCode;

class Base extends Controller
{
    public static $allowAction = ['login', 'logout'];//不需要验证token的方法

    public function index()
    {

    }

    /**
     * Overrides
     * Base constructor.
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Overrides
     * @param null|string $action
     * @return bool|null
     */
    protected function onRequest(?string $action): ?bool
    {
        $bool = parent::onRequest($action); // TODO: Change the autogenerated stub
        if ($bool === false) return false;
        if (in_array($action, self::$allowAction)) return true;
        $objResult = Common::decodeToken(self::getToken());
        if (!$objResult->isSuccess()) {
            self::writeJson(ErrCode::$notAllowToken, [], $objResult->getData());
            return false;
        }
        return true;
    }

    /**
     * Overrides
     * @param \Throwable $throwable
     * @throws \Throwable
     */
    protected function onException(\Throwable $throwable): void
    {
        parent::onException($throwable); // TODO: Change the autogenerated stub
    }

    /**
     * Overrides
     * @param null|string $action
     */
    protected function actionNotFound(?string $action)
    {
        parent::actionNotFound($action); // TODO: Change the autogenerated stub
        $this->response()->withStatus(404);
        $file = EASYSWOOLE_ROOT . '/vendor/easyswoole/easyswoole/src/Resource/Http/404.html';
        if (!is_file($file)) {
            $file = EASYSWOOLE_ROOT . '/src/Resource/Http/404.html';
        }
        $this->response()->write(file_get_contents($file));
    }

    /**
     * 获取json参数
     * @return array|mixed
     */
    public function getRawJson()
    {
        $data = $this->request()->getBody()->__toString();
        if (empty($data)) return [];
        return json_decode($data, true);
    }

    /**
     * 获取token
     * @return string
     */
    public function getToken()
    {
        $header = $this->request()->getHeaders();
        return isset($header['x-token']) ? array_shift($header['x-token']) : '';
    }
}